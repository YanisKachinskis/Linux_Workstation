Lesson 6.
"""
Задание 1
1. Найдите информацию о том, как в Ubuntu открыть порт 80,443. Укажите как.
2. Установить nginx, сконфигурировать свой виртуальный хост, используя порт 80, так, чтобы:
на запрос клиента с указанным и непустым хидером 'User'. отправлять код 200 с текстом 
"Hi $user!", где $user - это значение хидера 'User'.
Иначе отправлять код 404 с текстом "Page not found".
3. Мне прислать конфиг nginx и команду curl, которую выполняете.

Задание 2
1. найти информацию о том, что такое самоподписанные сертификаты и сгенерировать такой для своего 
вэб сервера. Написать своими словами, что это такое и как сгенерить.
2. добавить SSL соединение для дифолтного виртуального хоста nginx, используя порт 443. 
Прикрепить конфиги nginx.
3. Откройте в браузере страницу хоста и посмотрите, как браузер реагирует на самоподписанные сертификаты. 
Напишите, что видите.
4. Мы говорили о необходимости шифровать симметрично. При этом проблем с получением ассиметричных сертификатов нет. 
Зачем такая сложная схема для установления SSL соединения? Почему бы не шифровать ассиметрично? Своими словами.

Задание 3 *
1. сейчас почти все сетевые провайдеры предоставляют клиентам белые адреса по умолчанию. Если у вас белый адрес, 
то нужно сделать ваш дифолтный виртуальный хост nginx доступным извне:
2. Разберитесь и сделайте проброс портов на вашем роутере (с публичного белого адреса на внутренний адрес компьютера)
3. в настройках Virtual Box / VMWare cделайте проброс портов с вашего компьютера на виртуальную машину, 
либо переведите сетевой интерфейс виртуальный машины в режим bridged и сделайте правки к конфигурации роутера.
4. разберитесь с тем, что такое файл /etc/hosts (в Windows c:\Windows\System32\Drivers\etc\hosts) и 
сделайте свой сайт доступным по адресу https://geekbrains-linux.ru
Это задание считается выполненным, если я получу инструкцию, как открыть ваш сайт на своем компьютере

Примечание. Задания 3 дано для тех, кому упражнений 1-2 показалось недостаточно.
"""

1. 
1.1 
ufw allow 80/tcp
ufw allow 443/tcp

1.2
sudo apt install nginxroot@ubuntu:~# cd /etc/nginx/sites-available/
root@ubuntu:/etc/nginx/sites-available# cp default my_site.conf
root@ubuntu:/etc/nginx/sites-available# cd ../sites-enabled/
root@ubuntu:/etc/nginx/sites-enabled# ln -s ../sites-available/my_site.conf

1.3
my_site.conf:
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/html;

        index index.html index.htm index.nginx-debian.html;

        server_name my_site.ru;

        location / {
                if ( $http_user != "kyerd"){
                        return 404 "Page not found";
                }
                return 200 "Hi, $http_user";
				
root@ubuntu:/etc/nginx/sites-available# curl -H "user: Ivan" my_site.ru
Page not found
root@ubuntu:/etc/nginx/sites-available# curl -H "user: kyerd" my_site.ru
Hi, kyerd

2.
Самоподписанный сертификат - это сертификат, подписанный лицом, создающим его, а не центром
сертификации.

Создаем приватный ключ и публичный сертификат
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt

Создаем специальные ключи Диффи-Хельмана
openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

В сниппеты добавляем 2 файла:
nano /etc/nginx/snippets/self-signed.conf
nano /etc/nginx/snippets/ssl-params.conf
В первый вносим ссылки на наш ключ и сертификат, во второй параметры SSL и указание 
на ключ Диффи-Хельмана

В настройках виртуального хоста (/etc/nginx/site-available/default) раскомметрируем настройки для SSL и включаем ссылки на сниппеты 
		 
		 listen 443 ssl default_server;
         listen [::]:443 ssl default_server;

         include snippets/self-signed.conf;
         include snippets/ssl-params.conf;
проверяем nginx -t и перезапускаем nginx -s reload

3.
При попытке зайти через браузер по https выдает предупреждающее сообщение, перейти можно только через кнопку "я понимаю риск"

4.
Четсно говоря не понял вопрос) 
Симметричное шифрование неудобно тем, что нужно ключ шифрования безопасно передать другой стороне.
Этот вопрос решается асимметричным шифрованием, где зашифровать сообщение можно публичным ключем,
который находится в открытом доступе, не нужно думать о безопасной передачи этого ключа.
При асимметричном шифровании накладные расходы выше, чем при симметричном.




