Lesson 4.
"""
1. Написать регулярное выражение, которое проверяет валидный IP-адрес. Например, 192.168.1.1 подойдет, 
а 256.300.1.1 — нет.
2. Написать регулярное выражение, которое проверяет, является ли указанный файлом нужного типа 
(на выбор .com,.exe или .jpg,.png,.gif и т.д.). Написать регулярное выражение для проверки, ведет ли 
ссылка URL на некоторый файл, и это действительно ссылка на картинку (например, http://site.com/folder/1.png), 
а не на любой файл.
3. *Написать регулярное выражение, которое проверяет, является выведенное значение «белым» IP-адресом 
(5.255.255.5 подойдет, а 172.16.0.1 — нет).
4. *Написать регулярное выражение, которое проверяет, что файл в URL (например, 
https://site.ru/folder/download/test.docx) не обладает неким расширением (например .exe не пройдет, или 
.sh — не пройдет. Выбор списка исключенных расширений за вами).
Примечание. Задания с 3 по 4 даны для тех, кому двух упражнений показалось недостаточно.

5. Задание от немцев.
У вас есть лог log.txt, который содержит запросы на загрузку файлов. Один запрос на одной строке. 
IP адрес во втором столбце. Имя файла может быть в любом столбце. Столбцы разделены одним или несколькими пробелами. 
Нужно написать выражение в одну строку, которое выведет список всех IP адресов за исключением loopback интерфейсов, 
с которых запрашивался файл /closeio.html, а также количество таких запросов для каждого адреса. Результат должен 
быть отсортирован по этому значению. Можно использовать стандартные тулы, которые запустятся на большинстве UNIX системах.

Непубличныыми адресами будем считать вот эти сети
0.0.0.0/8
127.0.0.1/8
169.254.0.0/16
172.16.0.0/12
192.168.0.0/16
10.0.0.0/8
255.255.255.255

Входные данные для тестов: https://github.com/mtuktarov/linux_stuff/blob/master/test_data.txt
"""

1.
Регулярное выражение осуществляет поиск IP адресов в диапазоне: 192.168.1.1 - 192.168.255.255

root@ubuntu:~# sed -En '/\b192\.168\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b/p' test_data.txt
192.168.0.0
192.168.0.1
192.168.2.255
192.168.255.255
192.168.0.255
192.168.255.0
192.168.10.10
192.168.10.255
192.168.255.10
192.168.10.0
192.168.0.10

2.
Действительно ли URL ведет к gif или png файлу.
root@ubuntu:~# echo 'http://site.com/folder/1.gif' | sed -En /'^.*\.(png|gif).*$'/p
http://site.com/folder/1.gif
root@ubuntu:~# echo 'http://site.com/folder/1.png' | sed -En /'^.*\.(png|gif).*$'/p
http://site.com/folder/1.png

или в файле

root@ubuntu:~# sed -En /'^.*\.(png|gif).*'/p test_data.txt

3*.
Честно говоря, я не понимаю, как в одно регулярное выражение вставить внести все диапозоны публичных IP адресов
да еще и инвертировать это все. Как-то уж много пересечений получается с белыми IP адресами в разных октетах.

4*. 
Вроде должен быть такой шаблон:
^(?!.*\.(sh|exe)).*$
сайт https://regex101.com/ как раз показывает, что совпадение с такими строками есть
http://site.com/folder/1.png
http://site.com/folder/1.gif
http://site.com/folder/1.jpg

а с такими нет
http://site.com/folder/1.exe
http://site.com/folder/1.sh

но почему-то не работает команда:
root@ubuntu:~# echo 'http://site.com/folder/1.png' | sed -En /'^(?!.*\.(sh|exe)).*$'/p
sed: -e expression #1, char 22: Invalid preceding regular expression

не могу понять причину...




